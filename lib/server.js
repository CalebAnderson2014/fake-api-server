// Generated by CoffeeScript 1.7.1
(function() {
  var Server, bodyParser, express;

  express = require('express');

  bodyParser = require('body-parser');

  Server = (function() {
    function Server() {
      this._resources = [];
      this._server = express();
      this._server.use(bodyParser());
      this._server.get("/api", (function(_this) {
        return function(req, res) {
          return res.send(_this._resources.map(function(resource) {
            return {
              name: resource.name(),
              url: "/api/" + (resource.pluralName())
            };
          }));
        };
      })(this));
    }

    Server.prototype.listen = function(port) {
      if (port == null) {
        port = 3000;
      }
      this._server.listen(port);
      console.log("server listening on localhost:" + port);
      return this;
    };

    Server.prototype.register = function(resource) {
      var url;
      this._resources = this._resources.concat([resource]);
      url = function(path) {
        if (path == null) {
          path = '';
        }
        return "/api/" + (resource.pluralName()) + path;
      };
      this._server.get(url(), function(req, res) {
        return res.send(resource.all());
      });
      this._server.get(url("/:id"), function(req, res) {
        var data;
        data = resource.find(req.params.id);
        if (data) {
          return res.send(data);
        } else {
          res.statusCode = 404;
          return res.send("No " + (resource.name()) + " with id " + req.params.id);
        }
      });
      this._server.post(url(), function(req, res) {
        var data;
        data = req.body;
        resource.add(data);
        return res.send(200);
      });
      this._server.put(url("/:id"), function(req, res) {
        if (resource.update(id, req.body)) {
          return res.send(200);
        } else {
          res.statusCode = 404;
          return res.send("No " + (resource.name()) + " with id " + req.params.id);
        }
      });
      this._server["delete"](url("/:id"), function(req, res) {
        if (resource.remove(id)) {
          return res.send(200);
        } else {
          res.statusCode = 404;
          return res.send("No " + (resource.name()) + " with id " + req.params.id);
        }
      });
      return this;
    };

    return Server;

  })();

  module.exports = Server;

}).call(this);
