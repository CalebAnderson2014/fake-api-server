// Generated by CoffeeScript 1.8.0
(function() {
  var Server, bodyParser, express;

  express = require('express');

  bodyParser = require('body-parser');

  Server = function(options) {
    var fail, getResource, resources, server;
    if (options == null) {
      options = {};
    }
    resources = [];
    server = express();
    if (typeof options.config === "function") {
      options.config(server);
    }
    server.use(bodyParser());
    getResource = function(cb) {
      return function(req, res) {
        var path, resource, sendResponse, _i, _len;
        path = req.params.resource;
        sendResponse = function(resource) {
          var error;
          try {
            return res.send(cb(req, resource));
          } catch (_error) {
            error = _error;
            res.statusCode = error.code;
            return res.send(error.message);
          }
        };
        for (_i = 0, _len = resources.length; _i < _len; _i++) {
          resource = resources[_i];
          if (resource.pluralName() === path) {
            sendResponse(resource);
          }
        }
        return res.send(404);
      };
    };
    fail = function(message, code) {
      if (code == null) {
        code = 404;
      }
      throw {
        message: message,
        code: code
      };
    };
    server.on("error", function(err) {
      return console.error(err);
    });
    server.get("/", function(req, res) {
      return res.send(resources.map(function(resource) {
        return {
          name: resource.name(),
          url: "/" + (resource.pluralName())
        };
      }));
    });
    server.get("/:resource", getResource(function(req, resource) {
      return resource.all();
    }));
    server.get("/:resource/:id", getResource(function(req, resource) {
      return resource.find(req.params.id) || fail(["No " + (resource.name()) + " with id " + req.params.id]);
    }));
    server.post("/:resource", getResource(function(req, resource) {
      var result;
      result = resource.create(req.body);
      if (result._errors) {
        fail(result._errors, 400);
      }
      return result;
    }));
    server.put("/:resource/:id", getResource(function(req, resource) {
      return resource.update(req.params.id, req.body) || fail("No " + (resource.name()) + " with id " + req.params.id);
    }));
    server["delete"]("/:resource/:id", getResource(function(req, resource) {
      return resource.remove(req.params.id) || fail("No " + (resource.name()) + " with id " + req.params.id);
    }));
    server.register = function(resource) {
      resources = resources.concat([resource]);
      return this;
    };
    return server;
  };

  module.exports = Server;

}).call(this);
