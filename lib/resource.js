// Generated by CoffeeScript 1.8.0
(function() {
  var Resource;

  Resource = function(name) {
    var idAttribute, idFactory, records, resource;
    records = [];
    idAttribute = "id";
    idFactory = function() {
      var d;
      return 1 + Math.max(0, Math.max.apply(Math, (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = records.length; _i < _len; _i++) {
          d = records[_i];
          _results.push(d[idAttribute]);
        }
        return _results;
      })()));
    };
    return resource = {
      _name: name,
      _pluralName: null,
      idAttribute: function() {
        if (arguments.length === 0) {
          return idAttribute;
        } else {
          idAttribute = arguments[0];
          return resource;
        }
      },
      idFactory: function() {
        if (arguments.length === 0) {
          return idFactory;
        } else {
          idFactory = arguments[0];
          return resource;
        }
      },
      name: function() {
        if (arguments.length === 0) {
          return resource._name;
        } else {
          resource._name = arguments[0];
          return resource;
        }
      },
      pluralName: function() {
        if (arguments.length === 0) {
          if (resource._pluralName) {
            return resource._pluralName;
          } else {
            return "" + resource._name + "s";
          }
        } else {
          resource._pluralName = arguments[0];
          return resource;
        }
      },
      all: function() {
        return records;
      },
      add: function(record) {
        record[idAttribute] = idFactory();
        records = records.concat([record]);
        return resource;
      },
      find: function(id) {
        var record;
        record = records.filter(function(d) {
          return ("" + d[idAttribute]) === ("" + id);
        });
        if (record.length) {
          return record[0];
        } else {
          return false;
        }
      },
      update: function(id, updates) {
        var record, value;
        record = this.find(id);
        if (!record) {
          return false;
        }
        for (name in updates) {
          value = updates[name];
          if (name !== idAttribute) {
            record[name] = value;
          }
        }
        return record;
      },
      remove: function(id) {
        var record;
        record = this.find(id);
        if (!record) {
          return false;
        }
        records = records.filter(function(d) {
          return ("" + d[idAttribute]) !== ("" + id);
        });
        return true;
      }
    };
  };

  module.exports = Resource;

}).call(this);
