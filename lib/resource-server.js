// Generated by CoffeeScript 1.8.0
(function() {
  var ResourceServer, bodyParser, express;

  express = require('express');

  bodyParser = require('body-parser');

  ResourceServer = function(resource) {
    var fail, respondTo, server;
    server = express();
    server.use(bodyParser());
    fail = function(message, code) {
      if (code == null) {
        code = 404;
      }
      throw {
        message: message,
        code: code
      };
    };
    respondTo = function(method_url, cb) {
      var method, url, _ref;
      _ref = method_url.split(' '), method = _ref[0], url = _ref[1];
      return server[method.toLowerCase()](url, function(req, res) {
        var error;
        try {
          return res.send(cb(req));
        } catch (_error) {
          error = _error;
          res.statusCode = error.code;
          return res.send(error.message);
        }
      });
    };
    server.on("error", function(err) {
      return console.error(err);
    });
    respondTo('GET /', function(req) {
      return resource.all();
    });
    respondTo('GET /:id', function(req) {
      return resource.find(req.params.id) || fail("No " + resource.name + " with id " + req.params.id);
    });
    respondTo('POST /', function(req) {
      var result;
      result = resource.create(req.body);
      if (result._errors) {
        fail(result._errors, 400);
      }
      return result;
    });
    respondTo('PUT /:id', function(req) {
      return resource.update(req.params.id, req.body) || fail("No " + resource.name + " with id " + req.params.id);
    });
    respondTo('DELETE /:id', function(req) {
      return resource.remove(req.params.id) || fail("No " + resource.name + " with id " + req.params.id);
    });
    return server;
  };

  module.exports = ResourceServer;

}).call(this);
